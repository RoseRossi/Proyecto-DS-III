#
# @autor: Cristian Machado <cristian.machado@correounivalle.edu.co>
# @copyrigth: 2024
# @license: GPL-3.0
#

# version: '3.8'

services:
  # Kafka Server
  kafka_server:
    build:
      context: .
      dockerfile: kafka-server/Dockerfile.compose
    ports:
      - "9092:9092"

  # Microservice ms_user
  ms_user_server:
    build:
      context: ms-user
      dockerfile: Dockerfile
    ports:
      - "4700:4700"
    environment:
      DB_HOST: ms_user_db
      DB_PORT: 5432
      DB_NAME: server_go
      DB_USER: postgres
      DB_PASSWORD: postgres
    depends_on:
      - ms_user_db

  # Database ms_user_server
  ms_user_db:
    build:
      context: ms-user
      dockerfile: db/Dockerfile
    environment:
      POSTGRES_DB: server_go
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ms_user_db_data:/var/lib/postgresql/data

  # Microservice ms_products
  ms_products_server:
    build:
      context: ms-products
      dockerfile: Dockerfile
    ports:
      - "4701:4700"
    environment:
      DB_HOST: ms_products_db
      DB_PORT: 5432
      DB_NAME: server_go
      DB_USER: postgres
      DB_PASSWORD: postgres
    depends_on:
      - ms_products_db
    
  # Database ms_user_server
  ms_products_db:
    build:
      context: ms-products
      dockerfile: db/Dockerfile
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: server_go
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ms_products_db_data:/var/lib/postgresql/data

  # Microservice ms_reviews
  ms_reviews:
    build:
      context: ms-reviews
      dockerfile: Dockerfile
    ports:
     - "5000:5000"
    environment:
      - MONGO_URI=mongodb://ms_reviews_db:27017/reviews
    depends_on:
      - ms_reviews_db

  ms_reviews_db:
    image: mongo:4.4
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  # Microservice ms_sales
  ms_sales:
    build:
      context: ms-sales
      dockerfile: Dockerfile
    ports:
     - "3000:3000"
    environment:
      - DB_URI=mongodb://ms_sales_db:27017/sales-service
    depends_on:
      - ms_sales_db

  ms_sales_db:
    image: mongo:7.0
    ports:
      - "27019:27017"
    volumes:
      - mongo-data-sales:/data/db

  # Microservice ms_spare-parts
  ms_spare_parts:
    build:
      context: ms-spare-parts
      dockerfile: Dockerfile
    ports:
     - "3005:3005"
    environment:
      DB_HOST: ms_spare_parts_db
      DB_USER: root
      DB_PASSWORD: osiris2016
      DB_PORT: 3306
      DB_DATABASE: inventario
    depends_on:
      - ms_spare_parts_db

  ms_spare_parts_db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: osiris2016
    volumes:
      - mysql-data:/var/lib/mysql
      - ./ms-spare-parts/db/database.sql:/docker-entrypoint-initdb.d/init.sql

  # Microservice ms_repairs
  ms_repairs:
    build:
      context: ms-repairs
      dockerfile: Dockerfile
    ports:
     - "3006:3006"
    environment:
      DB_HOST: ms_repairs_db
      DB_USER: root
      DB_PASSWORD: test
      DB_PORT: 3306
      DB_DATABASE: msrepairs
    depends_on:
      - ms_repairs_db

  ms_repairs_db:
    image: mysql:5.7
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: test
    volumes:
      - mysql-data-repairs:/var/lib/mysql
      - ./ms-repairs/db/database.sql:/docker-entrypoint-initdb.d/init.sql

  orchestrator:
    build:
      context: orchestrator
      dockerfile: Dockerfile
    ports:
      - "4800:4800"

# Persistence
volumes:
  ms_user_db_data:
  ms_products_db_data:
  mongo-data:
  mongo-data-sales:
  mysql-data:
  mysql-data-repairs: